h1. TODO

* Trial division: skapa en egen funktion för att "dela med låga primtal" (typ de första 100)
* Cache:a tidigare uträknade faktoriseringar (dynamisk programmering?? :D) och återanvänd smart (ger billigare uträkningar mot slutet?)
* Faktoriseringsmetoder bör returnera en bool (fast int, lol) så att man enklare kan outputt:a "fail"

h2. Pollard's Rho

* Shit is slow, why?

h2. Quadratic Sieve

* Oh the research...

h2. Completed stuff

* -Factors should be stored in a linked list, which each factor method fills up.-
* -Factor method should return whether it successfully (completely) factored the number or not.-

h1. Links

* "GMP Documentation":http://gmplib.org/manual/index.html
* "Primes @ Wolframalpha":http://www.wolframalpha.com/input/?i=primes+%3C%3D+2^100

* "Pollard's rho algorithm":http://en.wikipedia.org/wiki/Pollard's_rho_algorithm
* "Pollard's rho implementation in java":http://www.cs.princeton.edu/introcs/78crypto/PollardRho.java.html

* "Quadratic Sieve @ Wikipedia":http://en.wikipedia.org/wiki/Quadratic_sieve
* "Factoring large numbers with quadratic sieve @ MSDN":http://blogs.msdn.com/b/devdev/archive/2006/06/19/637332.aspx
